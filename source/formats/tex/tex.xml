<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fileformat>
<fileformat>

	<xi:include href="../ovl_base/ovl_base.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(*/*)" />

	<enum name="DdsType" storage="ubyte">
		maps the OVL's dds type to name of compression format
		<option value="35" name="DXGI_FORMAT_R8G8B8A8_UNORM"></option>
		<option value="37" name="DXGI_FORMAT_R8G8B8A8_UNORM_SRGB">gharial_male.pclut.dds, or DXGI_FORMAT_D24_UNORM_S8_UINT, DXGI_FORMAT_R8G8B8A8_UNORM</option>
		<option value="38" name="DXGI_FORMAT_D32_FLOAT_S8X24_UINT">atmospherics_stars_data.dds</option>
		<option value="43" name="DXGI_FORMAT_R16G16_FLOAT"></option>
		<!-- <option value="59" name="?"></option> -->

		<option value="78" name="DXGI_FORMAT_BC1_UNORM"></option>
		<option value="79" name="DXGI_FORMAT_BC1_UNORM_SRGB"></option>
		<option value="80" name="DXGI_FORMAT_BC2_UNORM"></option>
		<option value="81" name="DXGI_FORMAT_BC2_UNORM_SRGB"></option>
		<option value="82" name="DXGI_FORMAT_BC3_UNORM">PZ wolf baldnessscars texture</option>
		<option value="83" name="DXGI_FORMAT_BC3_UNORM_SRGB"></option>
		<option value="84" name="DXGI_FORMAT_BC4_UNORM"></option>
		<option value="85" name="DXGI_FORMAT_BC4_SNORM"></option>
		<option value="86" name="DXGI_FORMAT_BC5_UNORM"></option>
		<option value="87" name="DXGI_FORMAT_BC5_SNORM"></option>
		<option value="88" name="DXGI_FORMAT_BC6H_UF16">ptero aviary</option>
		<option value="89" name="DXGI_FORMAT_BC6H_SF16"></option>
		<option value="90" name="DXGI_FORMAT_BC7_UNORM"></option>
		<option value="91" name="DXGI_FORMAT_BC7_UNORM_SRGB">PZ titan beetle</option>
    </enum>

    <enum name="DdsTypeCoaster" storage="ubyte">
		maps the OVL's dds type to name of compression format
		<option value="74" name="DXGI_FORMAT_D24_UNORM_S8_UINT">ZTUAC ele heights textures</option>
		<option value="97" name="DXGI_FORMAT_BC1_UNORM"></option>
		<option value="98" name="DXGI_FORMAT_BC1_UNORM_SRGB"></option>
		<option value="99" name="DXGI_FORMAT_BC2_UNORM"></option>
		<option value="100" name="DXGI_FORMAT_BC2_UNORM_SRGB"></option>
		<option value="101" name="DXGI_FORMAT_BC3_UNORM"></option>
		<option value="102" name="DXGI_FORMAT_BC3_UNORM_SRGB"></option>
		<option value="103" name="DXGI_FORMAT_BC4_UNORM"></option>
		<option value="104" name="DXGI_FORMAT_BC4_SNORM"></option>
		<option value="105" name="DXGI_FORMAT_BC5_UNORM"></option>
		<option value="106" name="DXGI_FORMAT_BC5_SNORM"></option>

		<option value="121" name="DXGI_FORMAT_BC4_UNORM_B"></option>
		<option value="126" name="DXGI_FORMAT_BC7_UNORM"></option>
		<option value="127" name="DXGI_FORMAT_BC7_UNORM_SRGB"></option>

		<option value="250" name="DXGI_FORMAT_ALL"></option>
    </enum>

	<compound name="TexBuffer" >
		Part of a fragment, repeated for count of texture LODs / buffers.
		Data struct for headers of type 3
		24 bytes per texture buffer
		<add name="offset" type="uint64">byte offset in the combined buffer</add>
		<add name="size" type="uint64">byte size of this tex buffer</add>
		<add name="unkn" type="uint64">is also related to data size</add>
    </compound>

	<compound name="TexBufferPc" >
		Data struct for headers of type 7
		<add name="width" type="ushort"/>
		<add name="height" type="ushort"/>
		<add name="array size" type="ushort" vercond="!#ZTUAC#">may be depth</add>
		<add name="mip index" type="ushort">max mip in this buffer</add>
    </compound>

	<compound name="Header7Data1" >
		Data struct for headers of type 7
		<add name="zero" type="uint64">zero</add>
		<add name="data size" type="uint" >total dds buffer size</add>
		<add name="width" type="uint">x size in pixels</add>
		<add name="height" type="uint" >y size in pixels</add>
		<add name="depth" type="uint" >may be depth</add>
		<add name="array_size" type="uint">amount of repeats of the data for each lod</add>
		<add name="num mips" type="uint">amount of mip map levels</add>
		<add name="unk_pz" type="uint64" since="20">only found in PZ and JWE2</add>
		<add name="mip maps" type="Mipmap" arr1="num mips">info about mip levels</add>
    </compound>

	<compound name="Mipmap" >
		Data struct for one mipmap, part of a data 1 struct in headers of type 7
		<add name="offset" type="uint">starting offset into the texture buffer for this mip level</add>
		<add name="size" type="uint" >bytes for one array entry</add>
		<add name="size array" type="uint">bytes for all array entries</add>
		<add name="size scan" type="uint" >size of a scan line of blocks, including padding that is added to the end of the line</add>
		<add name="size data" type="uint">size of the non-empty scanline blocks, ie. the last lods add empty scanlines as this is smaller than size</add>
    </compound>

    <compound name="TexHeader" >
        ZTUAC, PC: 24 bytes, with 1 pointer
        JWE, PZ, JWE2: 40 bytes, with 2 pointers
        <add name="zero 0" type="uint64" >?</add>
        <add name="zero 1" type="uint64" vercond="!#OLD#">?</add>

		<add name="ptr 0" type="uint64" >8 bytes, all 0</add>
		<add name="ptr 1" type="uint64" vercond="!#OLD#">8 bytes, all 0</add>

		<add name="compression type" type="DdsType" vercond="!#OLD#">flag, not direct index into DDS enum</add>
		<add name="compression type" type="DdsType_Coaster" vercond="#OLD#">flag, not direct index into DDS enum</add>
		<add name="one 0" type="ubyte">0 or 1</add>
		<add name="stream_count" type="ubyte">amount of files combined in this texture, usually 1 or 2, 3 for JWE2 rex</add>
		<add name="stream_count repeat" type="ubyte">usually as above</add>
		<add name="pad" type="uint">0</add>
    </compound>

    <compound name="TexInfoHeader" inherit="GenericHeader">
		<add name="tex info" type="TexHeader"/>
		<add name="frag_01" type="TexBuffer" arr1="tex info \ stream_count" vercond="!#OLD#"/>
		<add name="frag_01" type="TexBufferPc" arr1="tex info \ stream_count" vercond="#OLD#"/>
		<add name="frag_11" type="Header7Data1" vercond="!#OLD#"/>
		<add name="padding" type="ubyte" arr1="320 - (frag_11 \ io_size)" vercond="#PZ16# #OR# #PZ# #OR# #JWE2#">pad whole frag_11 struct to 320 bytes</add>
		<add name="padding" type="ubyte" arr1="384 - (frag_11 \ io_size)" vercond="#JWE#">pad whole frag_11 struct to 320 bytes</add>
    </compound>
</fileformat>

