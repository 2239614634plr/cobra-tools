<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE niftoolsxml>
<niftoolsxml version="0.7.1.0">

	<xi:include href="../ovl_base/ovl_base.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(*/*)" />

    <compound name="Vector3" size="12" inherit="MemStruct">
        A vector in 3D space (x,y,z).
        <field name="x" type="float">First coordinate.</field>
        <field name="y" type="float">Second coordinate.</field>
        <field name="z" type="float">Third coordinate.</field>
    </compound>

    <compound name="HabitatBoundaryPropRoot" inherit="MemStruct">
        144 bytes
        <add name="Type" type="uint64">0 = Habitat, 1 = Ride, 2 = Guest</add>
        <add name="Prefab" type="Pointer" template="ZString"/>
        <add name="u1" type="uint64" />
        <add name="Post" type="Pointer" template="ZString"/>
        <add name="Wall" type="Pointer" template="ZString"/>
        <add name="u2" type="uint" />
        <add name="PosPostRL" type="Vector3" />
        <add name="UnkVec2" type="Vector3" />
        <add name="UnkVec3" type="Vector3" />
        <add name="UnkVec4" type="Vector3" />
        <add name="UnkVec5" type="Vector3" />
        <add name="PathJoinPart" type="Pointer" template="ZString"/>
        <add name="DoorCutoutHeightRL" type="Vector3">x = Wall cutout height for door, y = door cutout right, z = door cutout left</add>
        <add name="u2" type="uint" />
        <add name="unkFloat1" type="float" />
    </compound>

    <compound name="HabitatBoundaryDataRoot" inherit="MemStruct">
        224 bytes
        <add name="Prefab" type="Pointer" template="ZString"/>
        <add name="Walls_Extrusion" type="Pointer" template="ZString"/>
        <add name="Walls_Extrusion_End" type="Pointer" template="ZString"/>
        <add name="Walls_Extrusion_Top" type="Pointer" template="ZString"/>
        <add name="u0" type="uint64" />
        <add name="Walls_Extrusion_Bottom" type="Pointer" template="ZString"/>
        <add name="zeros" type="uint64" arr1="7"/>
        <add name="Broken_Post" type="Pointer" template="ZString"/>
        <add name="Broken_Extrusion" type="Pointer" template="ZString"/>
        <add name="Broken_Extrusion_Pile" type="Pointer" template="ZString"/>
        <add name="Broken_Ground" type="Pointer" template="ZString"/>
        <add name="Broken_1m" type="Pointer" template="ZString"/>
        <add name="Broken_10m" type="Pointer" template="ZString"/>
        <add name="Post" type="Pointer" template="ZString"/>
        <add name="Post_Cap" type="Pointer" template="ZString"/>
        <add name="u1" type="uint" />
        <add name="u2" type="float" />
        <add name="u3" type="ushort" />
        <add name="opt_straight_curve" type="bool" />
        <add name="opt_windows" type="bool" />
        <add name="UnkVec1" type="Vector3" />
        <add name="UnkVec2" type="Vector3" />
        <add name="UnkVec3" type="Vector3" />
        <add name="unkFloat1" type="float" />
        <add name="wall_replace_level" type="byte">Posts of N Level can only use Walls of less than N Level</add>
        <add name="type" type="byte">0 = Glass, 1 = Null, 3 = Solid Opaques (Brick, Concrete), 4 = 1-Way Glass, 5 = Wire Fences, 7 = Electrified Wire Fence</add>
        <add name="padding" type="ushort" />
    </compound>

    <compound name="ClimbproofDataRoot" inherit="MemStruct">
        48 bytes
        <add name="Climb_Proof" type="Pointer" template="ZString"/>
        <add name="Climb_Proof_Cap_Start" type="Pointer" template="ZString"/>
        <add name="Climb_Proof_Cap_End" type="Pointer" template="ZString"/>
        <add name="Climb_Proof_Bracket" type="Pointer" template="ZString"/>
        <add name="u0" type="float" />
        <add name="u1" type="float" />
        <add name="zero" type="uint64" />
    </compound>

</niftoolsxml>
